[{"D:\\Clear Vision Studios\\nasa-app-react\\src\\index.tsx":"1","D:\\Clear Vision Studios\\nasa-app-react\\src\\reportWebVitals.ts":"2","D:\\Clear Vision Studios\\nasa-app-react\\src\\App.tsx":"3","D:\\Clear Vision Studios\\nasa-app-react\\src\\components\\header\\Header.tsx":"4","D:\\Clear Vision Studios\\nasa-app-react\\src\\components\\apod\\Apod.tsx":"5","D:\\Clear Vision Studios\\nasa-app-react\\src\\components\\search\\Search.tsx":"6"},{"size":501,"mtime":1612371642529,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":2578,"mtime":1614073054259,"results":"10","hashOfConfig":"8"},{"size":587,"mtime":1613405541631,"results":"11","hashOfConfig":"8"},{"size":1247,"mtime":1612728733989,"results":"12","hashOfConfig":"8"},{"size":885,"mtime":1613587185243,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"peu48r",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"D:\\Clear Vision Studios\\nasa-app-react\\src\\index.tsx",[],["30","31"],"D:\\Clear Vision Studios\\nasa-app-react\\src\\reportWebVitals.ts",[],"D:\\Clear Vision Studios\\nasa-app-react\\src\\App.tsx",["32"],"import React, { useEffect, useState } from \"react\";\r\nimport Masonry from 'react-masonry-css';\r\nimport ReactPaginate from 'react-paginate';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport \"./App.scss\";\r\nimport Apod from \"./components/apod/Apod\";\r\nimport Header from \"./components/header/Header\";\r\nimport Search from \"./components/search/Search\";\r\n\r\nconst breakpointColumnsObj = {\r\n  default: 3,\r\n  1100: 3,\r\n  700: 2,\r\n  500: 1\r\n};\r\n\r\nfunction App() {\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [media, setMedia] = useState<any>({});\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [searchString, setSearchString] = useState('nebula');\r\n\r\n  const search = async (searchValue: string) => {\r\n    setSearchString(searchValue)\r\n\r\n    const res = await fetch(\r\n      `https://images-api.nasa.gov/search?q=${searchValue}&page=${pageCount}`,\r\n      {\r\n        method: \"GET\",\r\n      }\r\n    );\r\n    const media = await res.json();\r\n    setMedia(media);\r\n    setLoading(false);\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    search(searchString)\r\n  }, [pageCount, searchString]);\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Route path=\"/apod\">\r\n          <Apod />\r\n        </Route>\r\n        <Route path=\"/media\">\r\n          <Search search={search} />\r\n          <Masonry\r\n            breakpointCols={breakpointColumnsObj}\r\n            className=\"media-container\"\r\n            columnClassName=\"my-masonry-grid_column\">\r\n            {media.collection.items?.map((item: any, i: number) => (\r\n              <div key={i}>\r\n                {item.links ? (\r\n                  <img className=\"image\" src={item?.links[0].href} alt=\"nasa_image\" />\r\n                ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n              </div>\r\n            ))}\r\n          </Masonry>\r\n          <ReactPaginate\r\n            previousLabel={\"Previous\"}\r\n            nextLabel={\"Next\"}\r\n            pageCount={Math.ceil(media.collection.metadata.total_hits / 100)}\r\n            pageRangeDisplayed={20}\r\n            marginPagesDisplayed={5}\r\n            onPageChange={(item) => setPageCount(item.selected + 1)}\r\n            pageClassName={\"pagename\"}\r\n            previousClassName={\"previous-class\"}\r\n            nextClassName={\"next-class\"}\r\n            activeClassName={\"active-class-name\"}\r\n            containerClassName={\"pagination-container\"}></ReactPaginate>\r\n        </Route>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Clear Vision Studios\\nasa-app-react\\src\\components\\header\\Header.tsx",[],["33","34"],"D:\\Clear Vision Studios\\nasa-app-react\\src\\components\\apod\\Apod.tsx",[],"D:\\Clear Vision Studios\\nasa-app-react\\src\\components\\search\\Search.tsx",["35"],"import React, { useState } from \"react\";\r\nimport \"./Search.scss\";\r\n\r\nfunction Search(props: any) {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const handleSearchInputChanges = (e: any) => {\r\n    setSearchValue(e.target.value);\r\n  }\r\n\r\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === \"Enter\") {\r\n      callSearchFunction(event)\r\n    }\r\n  }\r\n\r\n  const resetInputField = () => {\r\n    setSearchValue(\"\")\r\n  }\r\n\r\n  const callSearchFunction = (e: any) => {\r\n    e.preventDefault();\r\n    props.search(searchValue);\r\n  }\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <input className=\"search-input\" value={searchValue} onKeyDown={handleKeyPress} onChange={handleSearchInputChanges} type='text' />\r\n      <input onClick={callSearchFunction} type=\"submit\" value=\"SEARCH\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":43,"column":6,"nodeType":"42","endLine":43,"endColumn":31,"suggestions":"43"},{"ruleId":"36","replacedBy":"44"},{"ruleId":"38","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":17,"column":9,"nodeType":"48","messageId":"49","endLine":17,"endColumn":24},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.","ArrayExpression",["52"],["50"],["51"],"@typescript-eslint/no-unused-vars","'resetInputField' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [pageCount, search, searchString]",{"range":"55","text":"56"},[1093,1118],"[pageCount, search, searchString]"]